@*Use this in production*@
@*@page "{id:int}"*@
@*For development only*@
@page "{id:int?}"
@model Ludo_WebApp.Pages.Ludo.IndexModel

@{
    ViewData["Title"] = "Ludo Game";

    (string colorName, string colorHex) squareColor;
    var random = new Random();
}
@{
    if (Model.Request.Query.TryGetValue("successfullyJoined", out var successfullyJoined))
    {
        if (successfullyJoined.ToString() == "1")
        {
            <p>You succesfully joined!</p>
        }
    }
}
@Html.ValidationSummary(false, "", new { @class = "text-danger" })

@{
    if (Model.Gameboard != null && Model.Gameboard.GameStartDate == null)
    {
        @* todo: only show this to the player who created the game. *@
        <form method="post" asp-page-handler="StartGame">
            <input type="submit" value="Start Game" class="btn btn-primary" />
        </form>

        @* todo: don't show the "join game" section for the player who created the game. *@
        <h1>Join Game</h1>

        <div class="row">
            <div class="col-md-4">
                <form asp-page-handler="AddPlayer" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <!--<div class="form-group">
                    <label asp-for="NewGame.PlayerCount" class="control-label"></label>
                    <input asp-for="NewGame.PlayerCount" class="form-control" />-->
                    <!-- todo: switch to type="range"? -->
                    <!--<span asp-validation-for="NewGame.PlayerCount" class="text-danger"></span>
                    </div>-->
                    <div class="form-group">
                        <label asp-for="NewPlayer.PlayerName" class="control-label"></label>
                        <input asp-for="NewPlayer.PlayerName" class="form-control" />
                        <span asp-validation-for="NewPlayer.PlayerName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @foreach (var color in Model.Colors)
                        {
                            <input type="radio" asp-for="NewPlayer.PlayerColor" value="@color.Key"  id="color-radio-@color.Key" />
                            <label asp-for="NewPlayer.PlayerColor" class="control-label" style="color:@color.Value" for="color-radio-@color.Key">@color.Key</label> <!-- todo: fix clicking labels always selects first radio-input -->
                            <span asp-validation-for="NewPlayer.PlayerColor" class="text-danger"></span>
                        }
                        @if (Model.ColorError != null)
                        {
                            <span class="text-danger">@Model.ColorError</span>
                        }
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Join" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    }
    // note: else is disabled for development purposes
    // todo: reenable else for production code
    @*else*@
    {
        <!-- todo: autogenerate squares? -->
        <div class="gameboard row">
            <div class="col-md-9">
                <div class="squares">
                    @for (int y = 0; y < Model.RowCount; y++)
                    {
                        @for (int x = 0; x < Model.ColumnCount; x++)
                        {
                            int squareIndex = Model.SquareIndices[y, x];
                            if (!Model.Colors2.TryGetValue(Model.SquareColors[y, x], out squareColor))
                            {
                                squareColor = ("error", "pink");
                            }

                            @*<div class="square" data-square-id="@(y * columnCount + x)"></div> // This*@
                            var randomColor = Model.Colors2.ElementAt(random.Next(0, Model.Colors2.Count));

                            <div @Html.Raw(squareIndex != -1 ? "class=\"square\"" : "")
                                 @(squareIndex is >= 0 or >= -4 and <= -3 ? $"data-square-id=\"{@Model.SquareIndices[y, x]}\"" : "")
                                 data-square-color="@squareColor.colorName"
                                 style="border-color: @squareColor.colorHex; color: @(Model.SquareColors[y, x] == 'x' ? squareColor.colorHex : randomColor.Value.colorHex)"
                                 draggable="true">@(Model.SquareColors[y, x] == 'x' ? squareColor.colorName.ToUpper() : (squareIndex != -1 && randomColor.Key != ' ' && randomColor.Key != 'x' ? "●" : ""))</div>// This
                        }
                    }
                </div>
            </div>

            <div class="col-md-3">
                <div class="row">
                    <form method="post">
                        <div class="form-group">
                            <div class="row">
                                <label @* asp-for="" *@ class="control-label" for="TEMPATTRIBUTE_select_piece" style="display: block; color: #fff">Move piece on square:</label>
                                <!--<input--> @* asp-for="" *@ <!--class="form-control" />-->
                                <span @* asp-validation-for="" *@ class="text-danger" name="TEMPATTRIBUTE_select_piece"></span>
                            </div>
                            <div class="row">
                                <select size="4">
                                    <option data-square-move-from-id="0">Add new piece to square 0</option>
                                    <option data-square-move-from-id="10">Square 10</option>
                                    <option data-square-move-from-id="29">Square 29</option>
                                    <option data-square-move-from-id="44">Square 44</option>
                                </select>
                            </div>
                            <div class="row">
                                <label @* asp-for="" *@ class="control-label" for="TEMPATTRIBUTE_select_piece" style="display: block; color: #fff">Move piece to: square:</label>
                                <!--<input--> @* asp-for="" *@ <!--class="form-control" />-->
                                <span @* asp-validation-for="" *@ class="text-danger" name="TEMPATTRIBUTE_select_piece"></span>
                            </div>
                            <div class="row">
                                <select size="3">
                                    <option data-square-move-to-id="14">Square 14</option>
                                    <option data-square-move-to-id="33">Square 33</option>
                                    <option data-square-move-to-id="47">Square 47</option>
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
}

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/js/ludo.js"></script>
@*@if Model.Gameboard.
    <script type="text/javascript">
        $(function () {
            setInterval
        })*@
    </script>
